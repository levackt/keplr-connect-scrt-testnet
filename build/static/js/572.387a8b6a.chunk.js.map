{"version":3,"file":"static/js/572.387a8b6a.chunk.js","mappings":"uPAAaA,EAAQC,OACRC,EAAgBD,QAGhBE,EAAcF,sCACdG,EAAUH,qCACVI,EAAUJ,qCACVK,EAAWL,WACXM,EAAaN,iB,mBCFX,SAASO,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAHqC,SA8BtBC,IA9BsB,6EA8BrC,4GACQC,EAAqBC,OAAOC,0BAA0Bb,GAD9D,SAGyCW,EAAmBG,cAH5D,sCAGoBV,EAHpB,KAGWW,QACTV,EAAaD,GAJf,SAMyBY,EAAAA,oBAAAA,OAA2B,CAChDC,WAAYpB,EACZqB,QAASlB,EACTmB,OAAQR,EACRS,cAAehB,EACfiB,gBAAiBT,OAAOU,eAAetB,KAX3C,cAMQuB,EANR,iBAeYA,EAASC,MAAMC,KAAKC,QAAQ,CACpCX,QAASX,EACTuB,MAAO/B,IAjBX,iBAcegC,EAdf,EAcIF,QAAWE,OAKbrB,EAAa,GAAD,OAAIqB,EAAS,IAAb,YAAoBlC,IAnBlC,4CA9BqC,sEAoDrC,0FAEEmC,QAAQC,IAAR,iCAAsC9B,EAAtC,8BACaC,EADb,qBACoCH,EADpC,qBACwDC,EADxD,mBAC0EL,EAD1E,iCAEgBE,IAJlB,SAMQgB,OAAOmB,MAAMC,yBAAyB,CAC1Cd,QAASlB,EACTiC,UAAWhC,EACXiC,IAAKpC,EACLqC,KAAMpC,EACNqC,MAAO,CACLC,SAAU,KAEZA,SAAU,IACVC,cAAe,CACbC,UAAW7C,EACX8C,iBAAkB5C,EAClB6C,aAAc,GAEhBC,aAAc,CACZC,oBAAqB,SACrBC,mBAAoB,YACpBC,oBAAqB,gBACrBC,mBAAoB,mBACpBC,qBAAsB,gBACtBC,oBAAqB,oBAEvBC,WAAY,CACV,CACEV,UAAW7C,EACX8C,iBAAkB5C,EAClB6C,aAAc,IAGlBS,cAAe,CACb,CACEX,UAAW7C,EACX8C,iBAAkB5C,EAClB6C,aAAc,IAGlBU,aAAc,CACZC,IAAK,GACLC,QAAS,IACTC,KAAM,IAERC,SAAU,CAAC,gBA/Cf,uBAkDQ3C,OAAOmB,MAAMyB,OAAOxD,GAlD5B,OAmDEU,IACAD,GAAgB,GApDlB,4CApDqC,sBA2GrC,OArGAG,OAAO6C,iBAAiB,wBAAxB,uBAAgD,mGACxC/C,IADwC,6CAKhDgD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,yCAAG,uFACX/C,OAAOmB,MADI,0CAGLnB,OAAOmB,MAAMyB,OAAOxD,GAHf,OAIXS,GAAgB,GAJL,uDAMXoB,QAAQ+B,KAAR,qCAA2C5D,GAA3C,MACAS,GAAgB,GAPL,4CAWTC,IAXS,yDAAH,qDAed,OADAiD,IACO,WAAQ,CAChB,GAAE,KAgFD,UAAC,IAAD,CAAWE,UAAU,QAArB,WACIrD,IACA,iBAAKqD,UAAU,cAAf,WACE,SAAC,IAAD,CAAKC,QAAQ,SAAb,UACE,SAAC,IAAD,CACEC,IAAE,EACFC,OAAO,OAFT,4DAOF,SAAC,IAAD,WACE,SAAC,KAAD,CAAQH,UAAU,eAAeI,QAxHN,2CAwH3B,UACE,gBAAKC,IAAI,yBAAyBC,IAAI,YAK7C3D,IACC,UAAC,KAAD,CAAMqD,UAAU,YAAhB,WACE,SAAC,IAAD,CACEE,IAAE,EACFC,OAAO,OAFT,8BAMA,4BACE,0BACE,4CADF,IACgC5D,KAE/BE,GAAY,0BAAK,wBAAG,6CAAqBA,UAAgC,SAAC,KAAD,YAOrF,C","sources":["constants/constants.js","components/KeplrConnect.jsx"],"sourcesContent":["export const DENOM = process.env.REACT_APP_DENOM;\nexport const MINIMAL_DENOM = process.env.REACT_APP_MINIMAL_DENOM;\nexport const AMOUNT_GIVEN = process.env.REACT_APP_AMOUNT_GIVEN;\nexport const EXPLORER_URL = process.env.REACT_APP_EXPLORER_URL;\nexport const GRPCWEB_URL = process.env.REACT_APP_GRPCWEB_URL;\nexport const RPC_URL = process.env.REACT_APP_RPC_URL;\nexport const LCD_URL = process.env.REACT_APP_LCD_URL;\nexport const CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\nexport const CHAIN_NAME = process.env.REACT_APP_CHAIN_NAME;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Card, Button, Row, Text } from \"@nextui-org/react\";\nimport { SecretNetworkClient } from \"secretjs\";\nimport { GRPCWEB_URL, CHAIN_ID, CHAIN_NAME, RPC_URL, LCD_URL, MINIMAL_DENOM, DENOM } from \"../constants/constants\";\nimport { Loading } from '@nextui-org/react';\n\nexport default function KeplrConnect() {\n  const [myAddress, setMyAddress] = useState(\"\");\n  const [myBalance, setMyBalance] = useState(\"\");\n  const [keplrEnabled, setKeplrEnabled] = useState(false);\n\n  //listen for account changes\n  window.addEventListener(\"keplr_keystorechange\", async () => {\n    await refreshAccount();\n  });\n\n  // try to enable the chain-id if it doesn't exist in the wallet\n  useEffect(() => {\n    const getKeplr = async () => {\n      if (window.keplr) {\n        try {\n          await window.keplr.enable(CHAIN_ID);\n          setKeplrEnabled(true);\n        } catch (err) {\n          console.warn(`failed to enable chain-id: ${CHAIN_ID}`, err);\n          setKeplrEnabled(false);\n          return;\n        }\n      }\n      await refreshAccount();\n    };\n\n    getKeplr();\n    return () => {};\n  }, []);\n\n  async function refreshAccount() {\n    const keplrOfflineSigner = window.getOfflineSignerOnlyAmino(CHAIN_ID);\n\n    const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n    setMyAddress(myAddress);\n\n    const secretjs = await SecretNetworkClient.create({\n      grpcWebUrl: GRPCWEB_URL,\n      chainId: CHAIN_ID,\n      wallet: keplrOfflineSigner,\n      walletAddress: myAddress,\n      encryptionUtils: window.getEnigmaUtils(CHAIN_ID),\n    });\n    const {\n      balance: { amount },\n    } = await secretjs.query.bank.balance({\n      address: myAddress,\n      denom: MINIMAL_DENOM,\n    });\n    setMyBalance(`${amount / 1e6} ${DENOM}`);\n  }\n\n  async function handleConnect() {\n\n    console.log(`connecting to chain-id:${CHAIN_ID}, \n    CHAIN_NAME=${CHAIN_NAME}, RPC_URL=${RPC_URL}, LCD_URL=${LCD_URL}, DENOM=${DENOM}, \n    MINIMAL_DENOM=${MINIMAL_DENOM}`);\n\n    await window.keplr.experimentalSuggestChain({\n      chainId: CHAIN_ID,\n      chainName: CHAIN_NAME,\n      rpc: RPC_URL,\n      rest: LCD_URL,\n      bip44: {\n        coinType: 529,\n      },\n      coinType: 529,\n      stakeCurrency: {\n        coinDenom: DENOM,\n        coinMinimalDenom: MINIMAL_DENOM,\n        coinDecimals: 6,\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"secret\",\n        bech32PrefixAccPub: \"secretpub\",\n        bech32PrefixValAddr: \"secretvaloper\",\n        bech32PrefixValPub: \"secretvaloperpub\",\n        bech32PrefixConsAddr: \"secretvalcons\",\n        bech32PrefixConsPub: \"secretvalconspub\",\n      },\n      currencies: [\n        {\n          coinDenom: DENOM,\n          coinMinimalDenom: MINIMAL_DENOM,\n          coinDecimals: 6,\n        },\n      ],\n      feeCurrencies: [\n        {\n          coinDenom: DENOM,\n          coinMinimalDenom: MINIMAL_DENOM,\n          coinDecimals: 6,\n        },\n      ],\n      gasPriceStep: {\n        low: 0.1,\n        average: 0.25,\n        high: 0.4,\n      },\n      features: [\"secretwasm\"],\n    });\n\n    await window.keplr.enable(CHAIN_ID);\n    refreshAccount();\n    setKeplrEnabled(true);\n  }\n\n  return (\n    <Container className=\"keplr\">\n      {!keplrEnabled && (\n        <div className=\"enableKeplr\">\n          <Row justify=\"center\">\n            <Text \n              h4\n              weight=\"bold\"\n            >\n              Add pulsar-2 network configuration to Keplr\n            </Text>\n          </Row>\n          <Row>\n            <Button className=\"keplrConnect\" onPress={handleConnect}>\n              <img src=\"images/Keplr_Black.png\" alt=\"\" />\n            </Button>\n          </Row>\n          </div>\n      )}\n      {keplrEnabled && (\n        <Card className=\"keplrCard\">\n          <Text \n            h4\n            weight=\"bold\"\n          >\n            Keplr connected\n          </Text>\n          <div>\n            <p>\n              <strong>My Address:</strong> {myAddress}\n            </p>\n            {myBalance ? <div><p><strong>My Balance: {myBalance}</strong></p></div> : <Loading/>}\n\n            </div>\n        </Card>\n      )}\n    </Container>\n  );\n}\n"],"names":["DENOM","process","MINIMAL_DENOM","GRPCWEB_URL","RPC_URL","LCD_URL","CHAIN_ID","CHAIN_NAME","KeplrConnect","useState","myAddress","setMyAddress","myBalance","setMyBalance","keplrEnabled","setKeplrEnabled","refreshAccount","keplrOfflineSigner","window","getOfflineSignerOnlyAmino","getAccounts","address","SecretNetworkClient","grpcWebUrl","chainId","wallet","walletAddress","encryptionUtils","getEnigmaUtils","secretjs","query","bank","balance","denom","amount","console","log","keplr","experimentalSuggestChain","chainName","rpc","rest","bip44","coinType","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","feeCurrencies","gasPriceStep","low","average","high","features","enable","addEventListener","useEffect","getKeplr","warn","className","justify","h4","weight","onPress","src","alt"],"sourceRoot":""}